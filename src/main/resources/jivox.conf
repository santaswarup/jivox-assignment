akka{
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  actor{
    provider = cluster
    serializers {
      java = "akka.serialization.JavaSerializer"
      jivox = "com.jivox.actor.JivoxSerealizer"
    }
    serialization-bindings {

      "com.jivox.actor.JivoxServiceLogsFailure" = jivox
    }
  }
  remote{
    artery{
      enable = on
      canonical.hostname = "localhost"
      transport = aeron-udp
      canonical.port = 55519
    }
  }
}

jivoxFailureHandlerConfig {
  akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = "INFO"
    actor {
      provider = cluster
      serializers {
        java = "akka.serialization.JavaSerializer"
        jivox = "com.jivox.actor.JivoxSerealizer"
      }
      serialization-bindings {
        "com.jivox.actor.JivoxServiceLogsFailure" = jivox
      }
    }
    remote {
      artery {
        enable = on
        transport = aeron-udp
        canonical.hostname = "localhost"
        canonical.port = 5555
      }
    }
    persistence {
      cassandra-journal.contact-points = "cassandra.us-east-1.amazonaws.com"
      journal.plugin = "cassandra-journal"
      snapshot-store.plugin = "cassandra-snapshot-store"
    }


  }
}

  jivoxReadJournalConfig {
    akka{
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      loglevel = "INFO"

      persistence{
      cassandra-journal.contact-points = "cassandra.us-east-1.amazonaws.com"
        journal.plugin = "cassandra-journal"
        snapshot-store.plugin = "cassandra-snapshot-store"
      }


    }
}

